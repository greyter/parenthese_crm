{"files":[{"id":"78f1e4b3-812b-492c-ac50-982351b6c8de","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/Paris\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [\n      {\n        \"userSymbol\": \"People\",\n        \"version\": \"v1\",\n        \"serviceId\": \"peopleapi\"\n      }\n    ]\n  },\n  \"webapp\": {\n    \"access\": \"MYSELF\",\n    \"executeAs\": \"USER_DEPLOYING\"\n  },\n  \"exceptionLogging\": \"STACKDRIVER\"\n}"},{"id":"edf071fb-9c0b-4121-a994-8ae63b08ca77","name":"Code","type":"server_js","source":"function clientDataCheck(){\n  \n  // Vérifie si au moins un fichier est présent dans le dossier \"séjour en cours\". Si il n\u0027y en a pas, on envoie un rappel au client\n  var folder \u003d DriveApp.getFolderById(\u00271Yca6EJJ2Kk-I24HFcNzJVQ0Xkb8B0Mn8\u0027); \n  \n  var files \u003d folder.getFiles();\n  var i \u003d 0;\n  while (files.hasNext()) {\n    var file \u003d files.next();\n    //Logger.log(file.getName());\n    i++\n  }\n  \n  if(i \u003d\u003d\u003d 0){\n    Logger.log(\"i \u003d 0. Vers envoi mail\")\n    clientDataMail()\n  }else{\n    Logger.log(\"i\u003e1 . update de la valeur de spreadsheet\")\n    var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n    var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n    \n    var checkIns \u003d source.getRange(\u0027C:C\u0027).getValues();\n    var checkOuts \u003d source.getRange(\u0027E:E\u0027).getValues();\n    var datasOk \u003d source.getRange(\u0027O:O\u0027).getValues();\n    var todayVal \u003d new Date()/60/60/24;\n    \n    var ct \u003d 0;\n    while ( ct \u003c sourcesheet.getMaxRows()) {\n      if(((checkIns[ct][0]/60/60/24)) \u003c\u003d todayVal \u0026\u0026 ((checkOuts[ct][0]/60/60/24)) \u003e\u003d todayVal \u0026\u0026 datasOk[ct][0].length \u003d\u003d 0){\n        sourcesheet.getRange(\"O\"+(ct+1)).setValue(\"x\");\n        break;\n      }\n      ct++;\n    } \n  }\n}\n\nfunction clientDataMail(){\n  \n  var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n  var checkIns \u003d source.getRange(\u0027C:C\u0027).getValues();\n  var checkOuts \u003d source.getRange(\u0027E:E\u0027).getValues();\n  var datasOk \u003d source.getRange(\u0027O:O\u0027).getValues();\n  var todayVal \u003d new Date()/60/60/24;\n  \n  var langs \u003d source.getRange(\u0027H:H\u0027).getValues();\n  var emails \u003d source.getRange(\u0027K:K\u0027).getValues();\n  var firstNames \u003d source.getRange(\u0027I:I\u0027).getValues();\n  \n  var ct \u003d 0;\n  while ( ct \u003c sourcesheet.getMaxRows()) {\n    \n   /* Logger.log(\"---------------------------------------\");\n    Logger.log(\"email \u003d \"+emails[ct][0]);\n    Logger.log(\"checkin \u003d \"+((checkIns[ct][0]/60/60/24)))\n    Logger.log(\"checkin trafiqué \u003d \"+((checkIns[ct][0]/60/60/24)+(41.66*18)))\n    Logger.log(\"checkout \u003d \"+((checkOuts[ct][0]/60/60/24)))\n    Logger.log(\"checkout trafiqué \u003d \"+((checkOuts[ct][0]/60/60/24)+(41.66*10)))\n    Logger.log(\"now \u003d \"+todayVal)*/\n    \n    \n    if(((checkIns[ct][0]/60/60/24)+(41.66*18)) \u003c\u003d todayVal \u0026\u0026 ((checkOuts[ct][0]/60/60/24)+(41.66*10)) \u003e\u003d todayVal \u0026\u0026 datasOk[ct][0].length \u003d\u003d 0){ // 41.66 est égal à 1h00. Je ne sais pas pourquoi\n    //if(((checkIns[ct][0]/60/60/24)) \u003c\u003d todayVal \u0026\u0026 ((checkOuts[ct][0]/60/60/24)) \u003e\u003d todayVal \u0026\u0026 datasOk[ct][0].length \u003d\u003d 0){\n      \n      var formattedDate \u003d Utilities.formatDate(checkIns[ct][0], \"Europe/Luxembourg\", \"dd/MM/yyyy\");\n     // Logger.log(formattedDate);\n      \n      Logger.log(\"///////////////////////////\") \n      Logger.log(\"Passe IF envoie mail\")\n      //Logger.log(\"reply \u003d greyter+stay-\"+formattedDate+\"@gmail.com\")\n      Logger.log(\"///////////////////////////\") \n                 \n                 \n      switch(langs[ct][0]) {\n        case \"FR\":\n          var subject \u003d \"Demande d\u0027identification des voyageurs\";\n          message \u003d \"Bonjour \"+ firstNames[ct][0] +\"\\r\\n\\r\\n\";\n          message +\u003d \"Je suis désolé de vous déranger pendant votre séjour mais je dois vous demander une copie de vos documents d\u0027identités\\r\\n\";\n          message +\u003d \"La loi m\u0027oblige à collecter ces informations\\r\\n\\r\\n\";\n          message +\u003d \"Si cela vous intéresse, vous pourrez trouver plus d\u0027information à cette adresse - http://doc.gitesdewallonie.be/gestion-administrative-et-financiere/legislation/controle-des-voyageurs \\r\\n\\r\\n\";\n          message +\u003d \"Pourriez-vous prendre quelques minutes pour:\\r\\n\";\n          message +\u003d \"• Photographier la carte d\u0027identité ou le passport de chaque personne avec votre smartphone\\r\\n\";\n          message +\u003d \"• Ouvrir votre galerie de photos et sélectionner les photos\\r\\n\";\n          message +\u003d \"• Enfin, partager ces photos par email à l\u0027adresse greyter+identity@gmail.com. Vous pouvez aussi répondre à cet email.\\r\\n\\r\\n\";\n          message +\u003d \"Cet email est envoyé automatiquement ainsi que la vérification des documents. N\u0027en tenez pas compte si vous avez déjà envoyez vos documents d\u0027identités\\r\\n\\r\\n\";\n          message +\u003d \"Je vous souhaite un bon séjour.\\r\\n\\r\\nMerci à vous\\r\\n\\r\\nGrégory\";\n          break;\n        default:\n          var subject \u003d \"Travelers identification request\";\n          message \u003d \"Hello \"+ firstNames[ct][0] +\"\\r\\n\\r\\n\";\n          message +\u003d \"I\u0027m sorry to disturb you during your stay but I have to ask you a copy of your identity documents\\r\\n\";\n          message +\u003d \"The law requires me to collect these informations\\r\\n\\r\\n\";\n          message +\u003d \"For more information about this law - http://doc.gitesdewallonie.be/gestion-administrative-et-financiere/legislation/controle-des-voyageurs \\r\\n\\r\\n\";\n          message +\u003d \"Could you please take a few minutes for:\\r\\n\";\n          message +\u003d \"• Take a picture of the identity card or passport for each person with your smartphone\\r\\n\";\n          message +\u003d \"• Open your photos library and select the pictures\\r\\n\";\n          message +\u003d \"• Finally, share the pictures by email with greyter+identity@gmail.com. You can also reply to this email.\\r\\n\\r\\n\";\n          message +\u003d \"This email is sent automatically and the documents verification as well. Disregard if you already sent the documents\\r\\n\\r\\n\";\n          message +\u003d \"I wish you a pleasant stay.\\r\\n\\r\\nRegards\\r\\n\\r\\nGrégory\";\n      } \n      \n      GmailApp.sendEmail(emails[ct][0], subject, message,{cc:\"greyter@gmail.com\", replyTo:\"greyter+identity@gmail.com\"})\n      //GmailApp.sendEmail(\"greyter@gmail.com\", subject, message,{cc:\"greyter@gmail.com\", replyTo:\"greyter+identity@gmail.com\"}) \n      //GmailApp.sendEmail(\"greyter@gmail.com\", subject, message,{cc:\"greyter@gmail.com\"}) \n      break;\n  \n    } else if(((checkOuts[ct][0]/60/60/24)+(41.66*10)) \u003c todayVal){\n      // Bouger les fichiers\n      var source_folder \u003d DriveApp.getFolderById(\u00271Yca6EJJ2Kk-I24HFcNzJVQ0Xkb8B0Mn8\u0027);\n      var dest_folder \u003d DriveApp.getFolderById(\u00271nFMKrWgM1AhcZlg_rlyVdxDFZ1DRJzH2\u0027);\n      var files \u003d source_folder.getFiles();\n      \n      while (files.hasNext()) {\n        var file \u003d files.next();\n        dest_folder.addFile(file);\n        source_folder.removeFile(file);\n      }\n    \n    }\n    ct++;\n  }\n}\n\nfunction clientData(){\n  \n  // extraction des contenus de la spreadsheet et mise en tableau \n  var pattern \u003d new Array();\n  var replacement \u003d new Array();\n  \n  var checkInInverse,prenom, nom, tel, email, langue;\n  \n  \n  var sheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\"Mailing\");\n\n  var rows \u003d sheet.getDataRange();\n  var numRows \u003d rows.getNumRows();\n  var values \u003d rows.getValues();\n\n  for (var i \u003d 0; i \u003c\u003d numRows - 1; i++) {\n    if (i\u003d\u003d0){\n      var row \u003d values[i];\n      pattern \u003d values[i];\n    }else{\n      var row \u003d values[i];\n      replacement \u003d values[i] ;\n      \n    }\n    \n  }\n  \n  //for(i\u003d0;i\u003cpattern.length;i++){Logger.log(row[i])}\n  \n  // Modification du format des dates et initialisation des variables obligatoires\n  for(i\u003d0;i\u003creplacement.length;i++){\n    replacement[i] \u003d ifDate(replacement[i]);\n  }\n  \n  for(i\u003d0;i\u003cpattern.length;i++){\n    \n    if(pattern[i] \u003d\u003d \"Check in\"){\n      var tempo \u003d replacement[i].split(\"/\");\n      checkInInverse \u003d tempo[2]+\"\"+tempo[1]+\"\"+tempo[0];\n    }\n    \n    if(pattern[i] \u003d\u003d \"Prénom\"){\n      prenom \u003d replacement[i];\n    }\n    \n    if(pattern[i] \u003d\u003d \"Nom\"){\n      nom \u003d replacement[i];\n    }\n    \n    if(pattern[i] \u003d\u003d \"Téléphone\"){\n      tel \u003d replacement[i];\n    }\n    \n    if(pattern[i] \u003d\u003d \"Email Address\"){\n      email \u003d replacement[i];\n    }\n    \n    if(pattern[i] \u003d\u003d \"Langue\"){\n      langue \u003d replacement[i];\n    }\n  }\n\n  return [pattern,replacement,prenom,nom,checkInInverse,langue,tel,email];\n  \n\n}\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\nfunction welcomeMail(){\n  \n  var plateforme, prenom, nom, checkInInverse, langue, mailTemplateId,mailSubject;\n  var pattern \u003d new Array;\n  var replacement \u003d new Array;\n  \n  var clientReturn\u003d clientData();\n  for(i\u003d0;i\u003cclientReturn[0].length;i++){\n    pattern.push(clientReturn[0][i]);\n    replacement.push(clientReturn[1][i]);\n  }\n  \n  plateforme \u003d clientReturn[1][0];\n  prenom \u003d clientReturn[2];\n  nom \u003d clientReturn[3];\n  checkInInverse \u003d clientReturn[4];\n  langue \u003d clientReturn[5];\n  \n  var draftMail \u003d GmailApp.getDraftMessages()\n  \n  //récupération de l\u0027id du mail en fonction du nom du sujet du mail qui doit être Template FR ou Template EN\n  \n  \n  switch(plateforme) {\n    case \"Booking\":\n      var getTemplate \u003d \"Template \"+langue+\" Booking\";\n      break;\n      \n    case \"Airbnb\":\n      var getTemplate \u003d \"Template \"+langue+\" no deposit\";\n      break;\n      \n    case \"Abritel\":\n      var getTemplate \u003d \"Template \"+langue+\" no deposit\";\n      break;\n      \n    case \"Ardenne Etape\":\n      var getTemplate \u003d \"Template \"+langue+\" no deposit\";\n      break;\n      \n    default:\n      var getTemplate \u003d \"Template \"+langue;\n      \n      \n  }\n  console.log(getTemplate)\n  \n  for(i\u003d0;i\u003cdraftMail.length;i++){\n    if(draftMail[i].getSubject() \u003d\u003d getTemplate){\n      mailTemplateId \u003d draftMail[i].getId();\n      break;\n    }\n  }\n  \n  switch(langue) {\n    case \"FR\":\n        mailSubject \u003d \"Information utiles pour votre séjour - Une parenthèse en Ardenne\";\n        break;\n    case \"EN\":\n        mailSubject \u003d \"Useful information for your stay - Une parenthèse en Ardenne\";\n        break;\n    default:\n        mailSubject \u003d \"Useful information for your stay - Une parenthèse en Ardenne\";\n  } \n \n  var docMailClient \u003d GmailApp.getMessageById(mailTemplateId);\n  var bodyMailClient \u003d docMailClient.getBody();\n  \n  for(i\u003d0;i\u003cpattern.length;i++){\n    bodyMailClient \u003d bodyMailClient.split(\"#\"+pattern[i]+\"#\").join(replacement[i]);\n  }\n  \n  \n  GmailApp.sendEmail(replacement[10], mailSubject, bodyMailClient,{htmlBody: bodyMailClient,cc:\"greyter@gmail.com\"})\n\n}\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\n\nfunction ficheClient(){\n\n  var prenom, nom, checkInInverse, langue, mailTemplateId;\n  var pattern \u003d new Array;\n  var replacement \u003d new Array;\n  \n  var clientReturn\u003d clientData();\n  for(i\u003d0;i\u003cclientReturn[0].length;i++){\n    pattern.push(clientReturn[0][i]);\n    replacement.push(clientReturn[1][i]);\n  }\n  \n  prenom \u003d clientReturn[2];\n  nom \u003d clientReturn[3];\n  checkInInverse \u003d clientReturn[4];\n  langue \u003d clientReturn[5];\n  \n  \n  var file \u003d DriveApp.getFileById(\"1YNgnVQr4d0-ky7YQJ5flD7E0H3JoFz64KAHpAPi56Q4\");\n  var folder \u003d DriveApp.getFolderById(\u00270B8j5jTNs1Ut9eGZWVzFMSkpsSTQ\u0027); \n    \n  file.makeCopy(checkInInverse+\" - \"+prenom+\" \"+nom,folder);\n  Utilities.sleep(3000);\n  \n  var newFiles \u003d DriveApp.getFilesByName(checkInInverse+\" - \"+prenom+\" \"+nom)\n    \n  while (newFiles.hasNext()) {\n    var newFile \u003d newFiles.next();\n    var newFileId \u003d newFile.getId();\n    var newFileUrl \u003d newFile.getUrl();\n }\n  \n  //Logger.log(newFileId);\n\n   var message;\n  for(i\u003d0;i\u003cpattern.length;i++){\n    message \u003d replacePatternFiche(newFileId,\"#\"+pattern[i]+\"#\",replacement[i]);\n    \n    if(replacement[2] \u003d\u003d \"Ardenne Etape\"){\n      message \u003d replacePatternFiche(newFileId,\"#AEbook#\",\"oui\")\n    }else{\n      message \u003d replacePatternFiche(newFileId,\"#AEbook#\",\"non\")\n    }\n  }\n\n  //newFile.addEditor(\"pochetvleurick@hotmail.be\");\n  newFile.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.EDIT);  \n  \n \n  var subject \u003d \"Nouvelle réservation - \"+replacement[2]+\" // \"+prenom+\" \"+nom;\n  message \u003d \"Salut Anouchka, Colette,\\r\\n\\r\\nVoici une nouvelle réservation\\r\\n\\r\\n\";\n  message +\u003d prenom+\" \"+nom+\" avec \"+replacement[0]+\"\\r\\n\";\n  message +\u003d\"Check In: \"+replacement[2]+\" - \"+replacement[3]+\"\\r\\n\";\n  message +\u003d\"Check Out: \"+replacement[4]+\" - \"+replacement[5]+\"\\r\\n\\r\\n\";\n  message +\u003d\"Tout le détail de cette réservation est disponible dans ce fichier\\r\\n\";\n  message +\u003dnewFileUrl+\"\\r\\n\\r\\n\";\n  message +\u003d\"Cette fiche peut évoluer entre le moment de la réservation et le séjour. N\u0027hésites pas à aller consulter la fiche avant et après le séjour.\\r\\n\\r\\nBiz\\r\\n\\r\\nGreg\";\n  \n  GmailApp.sendEmail(\"anouchkaliban@hotmail.be;labbec@live.be\", subject, message,{cc:\"greyter@gmail.com\"})\n  //GmailApp.sendEmail(\"greyter+anne@gmail.com\", subject, message,{cc:\"greyter@gmail.com\"})\n}\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\n\nfunction replacePatternFiche(fileId, pattern, replacement) {\n  \n  //Logger.log(\"pattern \u003d \"+pattern+\" er replacement \u003d \"+replacement);\n  var docFiche \u003d DocumentApp.openById(fileId);\n  var bodyFiche \u003d docFiche.getBody();\n\n  var findAndReplaceFiche \u003d bodyFiche.replaceText(pattern, replacement);\n  \n   \n  return findAndReplaceFiche;\n}\n\n\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\nfunction updateCalendar(){\n  \n  var plateforme, prenom, nom, checkInInverse, langue, mailTemplateId,mailSubject, checkin, checkout;\n  var pattern \u003d new Array;\n  var replacement \u003d new Array;\n  var row \u003d new Array;\n  \n  var clientReturn\u003d clientData();\n  for(i\u003d0;i\u003cclientReturn[0].length;i++){\n    pattern.push(clientReturn[0][i]);\n    replacement.push(clientReturn[1][i]);\n  }\n  \n  \n  plateforme \u003d clientReturn[1][0];\n  prenom \u003d clientReturn[2];\n  nom \u003d clientReturn[3];\n  checkInInverse \u003d clientReturn[4];\n  langue \u003d clientReturn[5];\n  \n  var syyyy \u003d replacement[2].substring(6, 10);\n  var sMM \u003d replacement[2].substring(3, 5)-1;\n  var sdd \u003d replacement[2].substring(0, 2);\n  var sHH \u003d replacement[3].substring(0, 2);\n  \n  var eyyyy \u003d replacement[4].substring(6, 10);\n  var eMM \u003d replacement[4].substring(3, 5)-1;\n  var edd \u003d replacement[4].substring(0, 2);\n  var eHH \u003d replacement[5].substring(0, 2);\n  \n  \n  // EVENT SEJOUR\n  var startTime\u003dnew Date(syyyy,sMM,sdd,sHH, 00, 00, 00);\n  var startTimeDesc\u003dnew Date(syyyy,sMM,sdd,sHH, 00, 00, 00);\n  var WPstartTime\u003dnew Date(syyyy,sMM,sdd,00, 00, 00, 00);\n  var endTime \u003d new Date(eyyyy,eMM,edd,eHH, 00, 00, 00);\n  var endTimeBooking \u003d new Date(eyyyy,eMM,edd,eHH, 00, 00, 00);\n  var WPendTime \u003d new Date(eyyyy,eMM,edd,00, 00, 00, 00);\n\n  // si le dernier jour est dimanche, on bloque un jour supplémentaire\n  if(endTime.getDay() \u003d\u003d 0){\n    var sharedEndTime \u003d new Date(endTime);\n    sharedEndTime \u003d sharedEndTime.setDate(sharedEndTime.getDate() + 1);\n    sharedEndTime \u003d new Date(sharedEndTime);\n  }else{\n    sharedEndTime \u003d endTime;\n  }\n  \n  //Logger.log(\"endTime \u003d \"+endTime);\n  //Logger.log(\"sharedEndTime \u003d \"+sharedEndTime);\n  \n  \n  \n  Logger.log(\"ES \u003d \"+startTimeDesc);\n  \n  //\u0027July 20, 1969 20:00:00 UTC\u0027\n  /*var startTime \u003d Utilities.formatDate(startTime, \"Europe/Luxembourg\", \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027\")\n  var endTime \u003d Utilities.formatDate(endTime, \"Europe/Luxembourg\", \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027\")*/\n  \n  \n  /*Logger.log(\"S \u003d \"+replacement[2]);\n  Logger.log(\"E \u003d \"+replacement[4]);\n  \n  Logger.log(\"------------------\");\n  \n  Logger.log(\"vs \u003d \"+startTime);\n  Logger.log(\"ve \u003d \"+endTime);*/\n  \n  \n  var eventStay \u003d CalendarApp.getCalendarById(\"nlfqavhh8aqu18ons4skvvnus0@group.calendar.google.com\").createEvent(replacement[0]+\" - \"+prenom+\" \"+nom, startTime, endTime);\n  eventStay.removeAllReminders();\n  \n  //var WPeventStay \u003d CalendarApp.getCalendarById(\"nu1vpoftols830vsli535t80do@group.calendar.google.com\").createEvent(replacement[0]+\" - \"+prenom+\" \"+nom, WPstartTime, WPendTime);\n  //WPeventStay.removeAllReminders();\n  \n  var sharedEnventStay \u003d CalendarApp.getCalendarById(\"g8iea52isr8u9nedcaf7nt5vs4@group.calendar.google.com\").createEvent(replacement[0]+\" - \"+prenom+\" \"+nom, startTime, sharedEndTime);\n  sharedEnventStay.removeAllReminders();\n  \n  \n   // EVENT CAUTION\n  \n  if(plateforme !\u003d\u003d\"Airbnb\" \u0026\u0026 plateforme !\u003d\u003d\"Ardenne Etape\" \u0026\u0026 plateforme !\u003d\u003d \"Abritel\" ){\n  \n    \n    if(plateforme \u003d\u003d\"Booking\"){\n      \n      var dateCaution \u003d startTime\n      dateCaution.setDate((dateCaution.getDate()-14));\n      Logger.log(\"EC \u003d \"+startTimeDesc);\n    \n    }else{\n    \n      var dateCaution \u003d new Date()\n      dateCaution.setDate((dateCaution.getDate()+7));\n      Logger.log(\"EC \u003d \"+startTimeDesc);\n    }\n    \n    var eventCaution \u003d CalendarApp.getCalendarById(\"brumj8600ej8mfqn1lkvhujlh8@group.calendar.google.com\").createAllDayEvent(prenom+\" \"+nom+\" - \"+Utilities.formatDate(startTimeDesc, \"Europe/Luxembourg\", \"dd/MM/yyyy\")+\" - acompte\", dateCaution);\n    eventCaution.removeAllReminders();\n  }\n  \n\n  \n  // EVENT LOCATION\n  \n  if(plateforme !\u003d\u003d\"Airbnb\" \u0026\u0026 plateforme !\u003d\u003d\"Ardenne Etape\" \u0026\u0026 plateforme !\u003d\u003d \"Abritel\" ){\n  \n    \n    if(plateforme \u003d\u003d\"Booking\"){\n      \n      var dateRental \u003d endTime;\n      dateRental.setMonth(dateRental.getMonth()+1);\n      dateRental.setDate(0);\n      dateRental.setDate(dateRental.getDate() + 15);\n      dateRental \u003d new Date(dateRental);\n      Logger.log(\"dateRental \u003d \"+dateRental)\n      \n      var eventRental \u003d CalendarApp.getCalendarById(\"brumj8600ej8mfqn1lkvhujlh8@group.calendar.google.com\").createAllDayEvent(prenom+\" \"+nom+\" - \"+Utilities.formatDate(startTimeDesc, \"Europe/Luxembourg\", \"dd/MM/yyyy\")+\" - location\", dateRental);\n  eventRental.removeAllReminders();\n    \n    }else{\n      \n      var dateRental \u003d startTime;\n      dateRental.setDate((dateRental.getDate()-14));\n      Logger.log(\"EL \u003d \"+startTimeDesc);\n      \n      var eventRental \u003d CalendarApp.getCalendarById(\"brumj8600ej8mfqn1lkvhujlh8@group.calendar.google.com\").createAllDayEvent(prenom+\" \"+nom+\" - \"+Utilities.formatDate(startTimeDesc, \"Europe/Luxembourg\", \"dd/MM/yyyy\")+\" - location\", dateRental);\n  eventRental.removeAllReminders();\n    \n    }\n  }    \n\n  \n  \n  \n  \n  // EVENT REFUND\n  \n  if(plateforme !\u003d\u003d\"Airbnb\" \u0026\u0026 plateforme !\u003d\u003d\"Ardenne Etape\" \u0026\u0026 plateforme !\u003d\u003d \"Abritel\" ){\n    \n    var dateRefund \u003d endTimeBooking;\n    dateRefund.setDate((dateRefund.getDate()+7));\n    Logger.log(\"ER \u003d \"+startTimeDesc);\n    \n  var eventRefund \u003d CalendarApp.getCalendarById(\"brumj8600ej8mfqn1lkvhujlh8@group.calendar.google.com\").createAllDayEvent(prenom+\" \"+nom+\" - \"+Utilities.formatDate(startTimeDesc, \"Europe/Luxembourg\", \"dd/MM/yyyy\")+\" - remboursement caution\", dateRefund);\n  eventRefund.removeAllReminders();\n  \n  }\n\n  var html \u003d HtmlService.createHtmlOutput().setWidth( 90 ).setHeight( 1 );\n  SpreadsheetApp.getUi().showModalDialog( html, \"Enregistrer cette réservation chez Ardenne Etape.\" );\n\n}\n\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\nfunction addContact(){\n  \n  var prenom, nom, tel, email,tel\n  \n  var pattern \u003d new Array;\n  var replacement \u003d new Array;\n  \n  var clientReturn\u003d clientData();\n  for(i\u003d0;i\u003cclientReturn[0].length;i++){\n    pattern.push(clientReturn[0][i]);\n    replacement.push(clientReturn[1][i]);\n  }\n  \n  prenom \u003d clientReturn[2];\n  nom \u003d clientReturn[3];\n  email \u003d clientReturn[7];\n  tel \u003d clientReturn[6];\n\n  // ANCIENNE API 02/06/2021\n  \n  /*var contact \u003d ContactsApp.createContact(prenom, nom, email);\n  \n  var group \u003d ContactsApp.getContactGroup(\u0027System Group: My Contacts\u0027);\n  group.addContact(contact);\n  \n  var group \u003d ContactsApp.getContactGroup(\u0027Parenthèse Ardenne\u0027);\n  group.addContact(contact);\n  \n  contact.addPhone(ContactsApp.Field.MOBILE_PHONE, tel); // avant WORK_PHONE mais j\u0027ai modifié le 07/10/19 à cause d\u0027un bug*/\n  \n  // version de dev ici\n  // https://script.google.com/home/projects/1KvB9ujOx1qJ4fbQp2EF4FDBSi9xHWtekQcpokCzdPPK_uow1XXva-7yq/edit\n  \n  // doc\n  //https://www.any-api.com/googleapis_com/people/docs/people/people_people_createContact\n\n\n  People.People.createContact({\n      \"names\": [{\n        \"metadata\": {\n          \"primary\" : true,\n        },\n        \"familyName\": nom,\n        \"givenName\": prenom\n      }],\n      \n      \"emailAddresses\": [{\n        \"metadata\": {\n          \"primary\" : true,\n        },\n        \"type\": \"home\",\n        \"value\": email\n      }],\n      \n      \"phoneNumbers\": [{\n        \"type\": \"mobile\",\n        \"value\": tel\n      }],\n      \n      \"memberships\": [{\n        \"contactGroupMembership\": {\n          \"contactGroupResourceName\" : \"contactGroups/43c6bc1c8dc56c16\"\n        },\n      }]\n    }\n  )\n}\n\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\nfunction completeRegistration(){\n  welcomeMail();\n  ficheClient();\n  updateCalendar();\n  addContact();\n}\n\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\n\nfunction ifDate(dateRaw){\n  //Logger.log(dateRaw);\n  var dateFormatted;\n  \n  if(typeof dateRaw \u003d\u003d \"object\"){\n    dateFormatted \u003d Utilities.formatDate(dateRaw, \"Europe/Luxembourg\", \"dd/MM/yyyy\")\n  }else{\n    dateFormatted \u003d dateRaw\n  }\n  return dateFormatted;\n  //Logger.log(dateFormatted)\n}\n\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\n\n/*\n* script to export data in all sheets in the current spreadsheet as individual csv files\n* files will be named according to the name of the sheet\n* Note: This script uses the DocsList.createFile() method, which is only available for Google Apps accounts.\n* author: Michael Derazon\n*/\n \nfunction saveAsCSV() {\nvar sheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\"Rentrées\");\n  \n// create a folder from the name of the spreadsheet\nvar folder \u003d DriveApp.getFolderById(\u00270B8j5jTNs1Ut9eGZWVzFMSkpsSTQ\u0027);   \n\n  fileName \u003d sheet.getName() + \".csv\";\n  // convert all available sheet data to csv format\n  var csvFile \u003d convertRangeToCsvFile_(fileName, sheet);\n  // create a file in the Docs List with the given name and the csv data\n  folder.createFile(fileName, csvFile);\n\nBrowser.msgBox(\u0027Files are waiting in a folder named \u0027 + folder.getName());\n}\n \nfunction convertRangeToCsvFile_(csvFileName, sheet) {\n// get available data range in the spreadsheet\nvar activeRange \u003d sheet.getDataRange();\ntry {\nvar data \u003d activeRange.getValues();\nvar csvFile \u003d undefined;\n \n// loop through the data in the range and build a string with the csv data\nif (data.length \u003e 1) {\nvar csv \u003d \"\";\nfor (var row \u003d 0; row \u003c data.length; row++) {\nfor (var col \u003d 0; col \u003c data[row].length; col++) {\nif (data[row][col].toString().indexOf(\",\") !\u003d -1) {\ndata[row][col] \u003d \"\\\"\" + data[row][col] + \"\\\"\";\n}\n}\n \n// join each row\u0027s columns\n// add a carriage return to end of each row, except for the last one\nif (row \u003c data.length-1) {\ncsv +\u003d data[row].join(\",\") + \"\\r\\n\";\n}\nelse {\ncsv +\u003d data[row];\n}\n}\ncsvFile \u003d csv;\n}\nreturn csvFile;\n}\ncatch(err) {\nLogger.log(err);\nBrowser.msgBox(err);\n}\n}\n\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\n\nfunction housemaidNextDate() {\n \n    var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n    var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n    var target \u003d SpreadsheetApp.openById(\u00271l5gGIkscOICOEBCSeNrVV-AZ9wdasef6_ylHfDGcrqo\u0027)\n    var targetsheet \u003d target.getSheetByName(\u0027Calendrier-sheet\u0027);\n  \n    // Vérifie si la date du fichier est plus grande ou égale à celle du jour\n  \n    var column \u003d source.getRange(\u0027C:C\u0027);\n    var values \u003d column.getValues(); // get all data in one call\n    var todayVal \u003d new Date()/60/60/24;\n     \n    var ct \u003d 0;\n    while ( ct \u003c sourcesheet.getMaxRows()) {\n      \n      //Logger.log(values[ct][0]+\" // checkin \u003d \"+values[ct][0]/60/60/24+\" // \"+todayVal);\n      \n      if(values[ct][0]/60/60/24 \u003e\u003d todayVal){\n         break;\n      }\n      ct++;\n    }\n\n    // Copie dans le fichier pour Anne\n    var targetrange \u003d targetsheet.getRange(1, 1, sourcesheet.getLastRow(), sourcesheet.getLastColumn());\n    var rangeValues \u003d sourcesheet.getRange(ct-1, 1, sourcesheet.getLastRow(), sourcesheet.getLastColumn()).getValues();\n    targetrange.setValues(rangeValues);\n  \n  // effacer les colonnes qui ne sont pas nécessaires\n  \n  targetsheet.deleteColumns(11, 3);\n  targetsheet.deleteColumns(7, 2);\n  targetsheet.deleteColumns(2, 1);\n\n}\n\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\n\nfunction googleSiteUpdate() {\n  \n  var pattern \u003d new Array();\n  \n  var source \u003d SpreadsheetApp.openById(\u00271l5gGIkscOICOEBCSeNrVV-AZ9wdasef6_ylHfDGcrqo\u0027)\n  var sourcesheet \u003d source.getSheetByName(\u0027Calendrier-sheet\u0027);\n  \n  var rows \u003d sourcesheet.getDataRange();\n  var numRows \u003d rows.getNumRows();\n  var values \u003d rows.getValues();\n  var htmlContent \u003d \"\";\n\n  for (var i \u003d 0; i \u003c\u003d numRows - 1; i++) {\n    var row \u003d values[i];\n    \n    if(typeof(row[1]) \u003d\u003d \"object\"){\n      row[1] \u003d Utilities.formatDate(row[1], \"Europe/Luxembourg\", \"dd/MM/yyyy\");\n      row[3] \u003d Utilities.formatDate(row[3], \"Europe/Luxembourg\", \"dd/MM/yyyy\");\n\n      if(i\u003d\u003d\u003d1){\n        htmlContent +\u003d \"\u003cdiv style\u003d\\\"border-left:5px solid rgb(171, 103, 135); padding-left: 15px;\\\"\u003e\";\n      }else{\n        htmlContent +\u003d \"\u003cdiv\u003e\";\n      }\n      htmlContent +\u003d \"\u003ch4\u003eDu \"+row[1]+\" - \"+row[2]+\" au \"+row[3]+\" - \"+row[4]+\"\u003c/h4\u003e\u003cp\u003e\u003cb\u003e\"+row[0]+\"\u003c/b\u003e - \"+row[5]+\" \"+row[6]+\"\u003c/p\u003e\";\n      \n      if(row[7].length \u003e 0 || row[0] \u003d\u003d \"Ardenne Etape\"){\n        htmlContent +\u003d \"\u003ch5\u003e\u003cu\u003eNe pas oublier:\u003c/u\u003e\u003c/h5\u003e\";\n        \n        if(row[7].length \u003e 0){\n          htmlContent +\u003d \"\u003cp\u003e\u0026#187; \"+row[7]+\"\u003c/p\u003e\";\n        }\n        \n        if(row[0] \u003d\u003d \"Ardenne Etape\"){\n          htmlContent +\u003d \"\u003cp\u003e\u0026#187; Poser le Welcome Pack Ardenne Etape sur la table de salle à manger\u003c/p\u003e\";\n        }\n        \n      }\n      \n      if(i\u003d\u003d\u003d0 || i\u003d\u003d\u003d1){\n        htmlContent +\u003d \"\u003ch5\u003e\u003cu\u003eEnvoyer une notification:\u003c/u\u003e\u003c/h5\u003e\";\n        htmlContent +\u003d \"\u003cp\u003e\u003ca onclick\u003d\\\"myFunction()\\\" style\u003d\\\"height: 25px;background: #ab6787;padding: 10px;text-align: center;border-radius: 5px;color: white;font-weight: bold;\\\" href\u003d\\\"https://script.google.com/macros/s/AKfycbwgYKp9nu1v52cLTjf-154XuNrYWxxrGehARzjijjeia8-_gs4/exec?firstname\u003d\"+row[5]+\"\u0026name\u003d\"+row[6]+\"\u0026checkin\u003d\"+row[1]+\"\\\"\u003eBois de chauffage\u003c/a\u003e \";\n        htmlContent +\u003d \"\u003ca style\u003d\\\"height: 25px;background: #ab6787;padding: 10px;text-align: center;border-radius: 5px;color: white;font-weight: bold;\\\" href\u003d\\\"mailto:greyter@gmail.com?subject\u003dDegradations du locataire \"+row[5]+\" \"+row[6]+\" du \"+row[1]+\"\u0026body\u003dSalut Greg, \\r\\n Le locataire \"+row[5]+\" \"+row[6]+\" a occasionné les dégradations suivantes:\\\"\u003eDégradations\u003c/a\u003e\u003c/p\u003e\";\n      }\n        \n      htmlContent +\u003d \"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\u003c/div\u003e\u003chr style\u003d\\\"border:1px solid #999999\\\"\u003e\"\n    }\n  }\n  \n\n  htmlContent \u003d \"\u003ch1\u003e Une nouvelle version de l\u0027application est disponible\u003c/h1\u003e\";\n  htmlContent +\u003d \"\u003ch2\u003e\u003cu\u003e\u003ca href\u003d\\\"https://script.google.com/macros/s/AKfycbycy5FcchC9YGtcfSzS1-TlFkw2GC9u6HAB3VjSBBOZEmGfp_U/exec\\\"\u003eClique ici pour accéder à la nouvelle application\u003c/a\u003e\u003c/u\u003e\u003c/h2\u003e\";\n  htmlContent +\u003d \"\u003ch3\u003eTu devras peut-être te logguer à nouveau avec ton compte Google\u003cbr/\u003eEn cas de problème, je peux revenir sur l\u0027ancienne. Dis le moi\u003c/h3\u003e\";\n \n  \n  //Logger.log(htmlContent);\n  /*Logger.log(\"pattern \u003d \"+pattern.join(\",\"));\n  Logger.log(\"replacement \u003d \"+replacement.join(\",\"));*/\n\n // var site \u003d SitesApp.getSite(\"greyter\");\n  //var page \u003d site.getChildren()[1];\n  // ARRET DE GOOGLE SITE V1 var page \u003d SitesApp.getPageByUrl(\"https://sites.google.com/site/greyter/home\")\n  //Logger.log(page.getHtmlContent());\n  // ARRET DE GOOGLE SITE V1 page.setHtmlContent(htmlContent);\n\n}\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\nfunction cleanHeaterTriggers(){\n\n  // Efface les triggers chauffage entre les 5 et 15 derniers jours tous les mardis\n var now \u003d new Date();\n var fiveDaysFromNow\u003d new Date(now.getTime() - (5 * 24 * 60 * 60 * 1000));\n var fifteenDaysFromNow \u003d new Date(now.getTime() - (15 * 24 * 60 * 60 * 1000));\n var events \u003d CalendarApp.getCalendarById(\"dbar0t16hhn7v58niplntcpkmg@group.calendar.google.com\").getEvents(fifteenDaysFromNow, fiveDaysFromNow);\n //Logger.log(\u0027Number of events: \u0027 + events.length);\n  \n  for(i\u003d0; i\u003cevents.length; i++){\n    //Logger.log(events[i].getEndTime());\n    events[i].deleteEvent();\n  }\n}\n\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------------------\n\nfunction onOpen(e) {\n  \n   SpreadsheetApp.getUi()\n       .createMenu(\u0027Action client\u0027)\n   \n       .addItem(\u0027Executer un enregistrement complet\u0027, \u0027completeRegistration\u0027)\n   \n       .addSeparator()\n\n       .addItem(\u0027Envoyer le welcome mail\u0027, \u0027welcomeMail\u0027)\n       .addItem(\u0027Mettre à jour le calendrier\u0027, \u0027updateCalendar\u0027)\n       .addItem(\u0027Créer la fiche client\u0027, \u0027ficheClient\u0027)\n       .addItem(\u0027Ajouter un contact\u0027, \u0027addContact\u0027)\n\n       .addToUi();\n }\n\n\n\n"},{"id":"2fef23b4-6921-4f61-ba0b-141682572c69","name":"Chauffage","type":"server_js","source":"\nfunction XXXisEvent(){\n  \n  var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n  // Récupère les dates et check si on est dans un event ou pas\n  \n  var columnCheckInDate \u003d sourcesheet.getRange(\u0027C:C\u0027);\n  var columnCheckInHour \u003d sourcesheet.getRange(\u0027D:D\u0027);\n  var columnCheckOutDate \u003d sourcesheet.getRange(\u0027E:E\u0027);\n  var columnCheckOutHour \u003d sourcesheet.getRange(\u0027F:F\u0027);\n  \n  var valuesCheckInDate \u003d columnCheckInDate.getValues(); // get all data in one call\n  var valuesCheckInHour \u003d columnCheckInHour.getValues();\n  var valuesCheckOutDate \u003d columnCheckOutDate.getValues();\n  var valuesCheckOutHour \u003d columnCheckOutHour.getValues();\n  \n  var unixNow \u003d new Date().getTime();\n  unixNow \u003d (unixNow / 1000)+(2*60*60);\n  \n  var ct \u003d 0;\n  while ( ct \u003c sourcesheet.getMaxRows()) {\n    var unixCheckInDate \u003d new Date(valuesCheckInDate[ct][0]).getTime();\n    var checkInhour \u003d valuesCheckInHour[ct][0].substring(0, 2);;\n    unixCheckInDate \u003d (unixCheckInDate/1000) + (checkInhour*60*60) + (2*60*60) // checkInHour pour l\u0027heure du check in 18h00 et 2 pour UTC+2\n    \n    var unixCheckOutDate \u003d new Date(valuesCheckOutDate[ct][0]).getTime();\n    var checkOuthour \u003d valuesCheckOutHour[ct][0].substring(0, 2);;\n    unixCheckOutDate \u003d (unixCheckOutDate/1000) + (checkOuthour*60*60) + (2*60*60) // checkOutHour pour l\u0027heure du check in 18h00 et 2 pour UTC+2\n    \n    //Logger.log(\"\\nDATE IN \"+valuesCheckInDate[ct][0]+\" \\nDATE OUT \"+valuesCheckOutDate[ct][0]+\" \\nIN \"+unixCheckInDate+\"- OUT\"+unixCheckOutDate+\" - NOW \"+unixNow+\"\\n-----------------------------\\n\");\n    \n    if(unixCheckOutDate \u003e\u003d unixNow){\n      break;\n    }\n    ct++;\n  }\n  \n  if((unixNow \u003e\u003d unixCheckInDate) \u0026\u0026 (unixNow \u003c\u003d unixCheckOutDate)){\n    Logger.log(\"je suis dans un event, je ne fais rien, j\u0027attends le prochain contrôle\");\n    message \u003d \"[chaudière] je suis dans un event, je ne fais rien, j\u0027attends le prochain contrôle\";\n    //sendMail(message);\n  }else{\n    getNextEvent()\n  }\n}\n\n\n//-------------------------------------------\n\nfunction getNextEvent(){\n  \n  // Quel est le programme en cours ?\n  \n  var doc \u003d DocumentApp.openById(\u00271nPEaO6Es6htNkRswOhJR1FHnKO0VB-cSqxFKvRGwrH8\u0027);\n  var body \u003d doc.getBody();\n  var currentProg \u003d body.getText();\n  var message;\n  \n  \n  // Quand est la prochaine location ?\n  \n  var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n  var columnCheckInDate \u003d sourcesheet.getRange(\u0027C:C\u0027);\n  var columnCheckInHour \u003d sourcesheet.getRange(\u0027D:D\u0027);\n  \n  var valuesCheckInDate \u003d columnCheckInDate.getValues(); // get all data in one call\n  var valuesCheckInHour \u003d columnCheckInHour.getValues();\n  \n  var unixNow \u003d new Date().getTime();\n  unixNow \u003d (unixNow / 1000)+(2*60*60);\n  \n  var ct \u003d 0;\n  while ( ct \u003c sourcesheet.getMaxRows()) {\n    var unixCheckInDate \u003d new Date(valuesCheckInDate[ct][0]).getTime();\n    var checkInhour \u003d valuesCheckInHour[ct][0].substring(0, 2);\n    unixCheckInDate \u003d (unixCheckInDate/1000) + (checkInhour*60*60) + (2*60*60) // checkInHour pour l\u0027heure du check in 18h00 et 2 pour UTC+2\n    \n    //Logger.log(\"\\nDATE IN \"+valuesCheckInDate[ct][0]+\" \\nIN \"+unixCheckInDate\" - NOW \"+unixNow+\"\\n-----------------------------\\n\");\n    \n    if(unixCheckInDate \u003e\u003d unixNow){\n      break;\n    }\n    ct++;\n  }\n  \n  // Dois-je remettre le chauffage en route ?\n  \n  var now \u003d new Date(); // date pour Google calendar\n  \n  // Si le programme en cours est ***prnorm et que la prochaine location est dans plus de 24h, lancer le programme ***prabs\n  if((currentProg \u003d\u003d\"***prnorm\") \u0026\u0026 ((unixCheckInDate - unixNow) \u003e\u003d (24*60*60))){\n    Logger.log (\"lancer programme ***prabs\");\n    message \u003d \"[chaudière] lancer programme ***prabs\";\n    //sendMail(message);\n    //ENVOYER SMS ***prabs\n    body.clear();\n    body.setText(\"***prabs\");\n    \n    var eventStartHeater \u003d CalendarApp.getCalendarById(\"dbar0t16hhn7v58niplntcpkmg@group.calendar.google.com\").createEvent(\"***prabs\", now, now);\n    eventStartHeater.removeAllReminders();\n  }\n  \n  // Si la prochaine location est dans moins de 24h et que le programme est sur ***prnorm, ne rien faire\n  else if((currentProg \u003d\u003d\"***prnorm\") \u0026\u0026 ((unixCheckInDate - unixNow) \u003c\u003d (24*60*60))){\n    Logger.log (\"en cours de chauffe avant location. Ne rien faire\");\n    message \u003d \"[chaudière] en cours de chauffe avant location. Ne rien faire\";\n    //sendMail(message);\n  }\n  \n  // Si la prochaine location est dans moins de 24 h, check de la météo. Sinon rien\n  else if((unixCheckInDate - unixNow) \u003c\u003d (24*60*60)){\n    Logger.log (\"check meteo\");\n    var unixTimeToWork \u003d getTimeToWork(unixCheckInDate)\n    \n    if(((unixCheckInDate - unixTimeToWork) \u003c\u003d unixNow) || ((unixCheckInDate - unixTimeToWork) \u003c (2*60*60))){\n      Logger.log(\"lancer programme ***prnorm\");\n      message \u003d \"[chaudière] lancer programme ***prnorm\";\n      //sendMail(message);\n      //ENVOYER SMS ***prnorm\n      body.clear();\n      body.setText(\"***prnorm\");\n      \n      var eventStartHeater \u003d CalendarApp.getCalendarById(\"dbar0t16hhn7v58niplntcpkmg@group.calendar.google.com\").createEvent(\"***prnorm\", now, now);\n      eventStartHeater.removeAllReminders();\n \n    }else{\n      Logger.log (\"temps de chauffe trop long, attendre le prochain contrôle\");\n      message \u003d \"[chaudière] temps de chauffe trop long, attendre le prochain contrôle\";\n      //sendMail(message);\n    }\n    \n  }else{\n    Logger.log (\"Temps avant prochaine location supérieur à 24h. Attendre le prochain contrôle\");\n    message \u003d \"[chaudière] Temps avant prochaine location supérieur à 24h. Attendre le prochain contrôle\";\n    //sendMail(message);\n  }\n\n}\n\n//---------------------------------------\n\nfunction getTimeToWork(unixCheckInDate){\n  \n  var options \u003d\n     {\n       \"muteHttpExceptions\" : true\n     };\n\n  var url \u003d \u0027http://api.openweathermap.org/data/2.5/forecast?q\u003dNollevaux,be\u0026APPID\u003dd58217c70b965d186386c66a5064f43c\u0026lang\u003dfr\u0026units\u003dmetric\u0027;\n  \n  var response \u003d UrlFetchApp.fetch(url,options); \n  //Logger.log(response);\n  var json \u003d response.getContentText();\n  var data \u003d JSON.parse(json);\n  //Logger.log(\"previ temp ext \u003d \"+data.list[2].main.temp);\n  \n  var tempForecast \u003d 0;\n  for(i\u003d0; i\u003c200;i++){\n    \n    tempForecast \u003d data.list[i].main.temp_min;\n    Logger.log(\"dt \u003d \"+data.list[i].dt_txt+\" temp \u003d \"+tempForecast);\n    \n    if(unixCheckInDate \u003c\u003d data.list[i].dt){\n      break;\n    }\n  }\n  \n  var tempWish \u003d 24;\n  var coef \u003d 3 // nombre de degré par heure\n  \n  var tempDiff \u003d tempWish - tempForecast;\n  Logger.log(\"Diff de temp \u003d \"+tempDiff);\n  var timeToWork \u003d tempDiff * coef;\n  timeToWork \u003d Math.round(timeToWork);\n  Logger.log(\"Temps de travail en heure \u003d \"+timeToWork);\n  var unixTimeToWork \u003d (timeToWork*60*60)\n  \n  return unixTimeToWork;\n   \n}\n\nfunction sendMail(message){\nGmailApp.sendEmail(\"greyter@gmail.com\", message, message)\n}"},{"id":"2588496b-2eea-401c-bf9b-9cccf3e1c36c","name":"Tasks","type":"server_js","source":"function checkBookingDate() {\n    \n  var todayDate \u003d new Date(+new Date + (1000*60*60*24*7));\n  var todayMonth \u003d todayDate.getMonth();\n  var todayDay \u003d todayDate.getDate();\n  var todayYear \u003d todayDate.getYear();\n  todayDate \u003d todayMonth+\"\"+todayDay;\n  //Logger.log(todayDate);\n  //Logger.log(\"-------------------\");\n  \n  var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n  \n  // Vérifie si la date du fichier est plus grande ou égale à celle du jour\n  \n  var column \u003d source.getRange(\u0027O:O\u0027);\n  var values \u003d column.getValues(); // get all data in one call\n\n  var ct \u003d 0;\n    while ( ct \u003c sourcesheet.getMaxRows()) {\n      \n      var bookingDate \u003d new Date(values[ct][0]);\n      //var bookingDate \u003d new Date(xBookingDate - (1000*60*60*24*7)); // envoi du mail 1 semaine avant la date de réservation\n      var bookingMonth \u003d bookingDate.getMonth();\n      var bookingDay \u003d bookingDate.getDate();\n      var bookingYear \u003d bookingDate.getYear();\n      bookingDate \u003d bookingMonth+\"\"+bookingDay;\n      \n      //Logger.log(new Date(xBookingDate - (1000*60*60*24*7)));\n      Logger.log(\"TEST - \"+ct+\" - bookingDate \u003d \"+bookingDate+\" | todayDate \u003d \"+todayDate);\n\n      if(bookingDate \u003d\u003d todayDate \u0026\u0026 bookingYear !\u003d todayYear ){\n        //Logger.log(\"-------------------\");\n        Logger.log(\"MATCH - bookingDate \u003d \"+bookingDate+\" | todayDate \u003d \"+todayDate);\n        \n        x \u003d ct+1;\n        var v \u003d sourcesheet.getRange(\"A\"+x+\":O\"+x).getValues();\n        var firstName \u003d v[0][8];\n        var name \u003d  v[0][9];\n        var email \u003d  v[0][10];\n        var langue \u003d v[0][7];\n        var platform \u003d v[0][0];\n        \n        var pattern \u003d [\"Prenom\", \"Nom\", \"Email Address\",\"Langue\"];\n        var replacement \u003d [firstName, name, email, langue];\n        \n        if(platform \u003d\u003d \"Ardenne Etape\"){\n          //sendLoyaltyMail(pattern, replacement);\n        }\n         //break;\n      }\n      ct++;\n    }\n}\n\n\nfunction sendLoyaltyMail(pattern, replacement){\n  \n  var draftMail \u003d GmailApp.getDraftMessages()\n  \n  //récupération de l\u0027id du mail en fonction du nom du sujet du mail qui doit être Template FR ou Template EN\n  for(i\u003d0;i\u003cdraftMail.length;i++){\n    if(draftMail[i].getSubject() \u003d\u003d \u0027Loyalty \u0027+replacement[3]){\n      mailTemplateId \u003d draftMail[i].getId();\n      break;\n    }\n  }\n  \n  switch(replacement[3]) {\n    case \"FR\":\n        mailSubject \u003d \"Une parenthèse en Ardenne - 10% sur votre prochain séjour\";\n        break;\n    case \"EN\":\n        mailSubject \u003d \"Une parenthèse en Ardenne - 10% discount for your next stay\";\n        break;\n    default:\n        mailSubject \u003d \"Une parenthèse en Ardenne - 10% discount for your next stay\";\n  }\n  \n  var docMailClient \u003d GmailApp.getMessageById(mailTemplateId);\n  var bodyMailClient \u003d docMailClient.getBody();\n  \n  for(i\u003d0;i\u003cpattern.length;i++){\n    bodyMailClient \u003d bodyMailClient.split(\"%23\"+pattern[i]+\"%23\").join(replacement[i]);\n  }\n  \n  Logger.log(bodyMailClient);\n  \n  GmailApp.sendEmail(replacement[2], mailSubject, bodyMailClient,{htmlBody: bodyMailClient})\n\n}"},{"id":"2a5cef65-17b1-4efa-bde8-63751da27beb","name":"TEST Chauffage","type":"server_js","source":"\nfunction isEvent(){ // CHANGER NOM FONCTION\n  \n  var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n  // Récupère les dates et check si on est dans un event ou pas\n  \n  var columnCheckInDate \u003d sourcesheet.getRange(\u0027C:C\u0027);\n  var columnCheckInHour \u003d sourcesheet.getRange(\u0027D:D\u0027);\n  var columnCheckOutDate \u003d sourcesheet.getRange(\u0027E:E\u0027);\n  var columnCheckOutHour \u003d sourcesheet.getRange(\u0027F:F\u0027);\n  \n  var valuesCheckInDate \u003d columnCheckInDate.getValues(); // get all data in one call\n  var valuesCheckInHour \u003d columnCheckInHour.getValues();\n  var valuesCheckOutDate \u003d columnCheckOutDate.getValues();\n  var valuesCheckOutHour \u003d columnCheckOutHour.getValues();\n  \n  var unixNow \u003d new Date().getTime();\n  unixNow \u003d (unixNow / 1000)+(2*60*60);\n  \n  var ct \u003d 0;\n  while ( ct \u003c sourcesheet.getMaxRows()) {\n    var unixCheckInDate \u003d new Date(valuesCheckInDate[ct][0]).getTime();\n    var checkInhour \u003d valuesCheckInHour[ct][0].substring(0, 2);;\n    unixCheckInDate \u003d (unixCheckInDate/1000) + (checkInhour*60*60) + (2*60*60) // checkInHour pour l\u0027heure du check in 18h00 et 2 pour UTC+2\n    \n    var unixCheckOutDate \u003d new Date(valuesCheckOutDate[ct][0]).getTime();\n    var checkOuthour \u003d valuesCheckOutHour[ct][0].substring(0, 2);;\n    unixCheckOutDate \u003d (unixCheckOutDate/1000) + (checkOuthour*60*60) + (2*60*60) // checkOutHour pour l\u0027heure du check in 18h00 et 2 pour UTC+2\n    \n    //Logger.log(\"\\nDATE IN \"+valuesCheckInDate[ct][0]+\" \\nDATE OUT \"+valuesCheckOutDate[ct][0]+\" \\nIN \"+unixCheckInDate+\"- OUT\"+unixCheckOutDate+\" - NOW \"+unixNow+\"\\n-----------------------------\\n\");\n    \n    if(unixCheckOutDate \u003e\u003d unixNow){\n      break;\n    }\n    ct++;\n  }\n  \n  if((unixNow \u003e\u003d unixCheckInDate) \u0026\u0026 (unixNow \u003c\u003d unixCheckOutDate)){\n    Logger.log(\"je suis dans un event, je ne fais rien, j\u0027attends le prochain contrôle\");\n    message \u003d \"[chaudière] - TEST je suis dans un event, je ne fais rien, j\u0027attends le prochain contrôle\";\n    //sendMail(message);\n  }else{\n    getNextEvent()\n  }\n}\n\n\n//-------------------------------------------\n\nfunction getNextEvent(){\n  \n  // Quel est le programme en cours ?\n  \n  var doc \u003d DocumentApp.openById(\u00271nPEaO6Es6htNkRswOhJR1FHnKO0VB-cSqxFKvRGwrH8\u0027);\n  var body \u003d doc.getBody();\n  var currentProg \u003d body.getText();\n  var message;\n  \n  \n  // Quand est la prochaine location ?\n  \n  var source \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sourcesheet \u003d source.getSheetByName(\u0027Rentrées\u0027);\n  \n  var columnCheckInDate \u003d sourcesheet.getRange(\u0027C:C\u0027);\n  var columnCheckInHour \u003d sourcesheet.getRange(\u0027D:D\u0027);\n  \n  var valuesCheckInDate \u003d columnCheckInDate.getValues(); // get all data in one call\n  var valuesCheckInHour \u003d columnCheckInHour.getValues();\n  \n  var unixNow \u003d new Date().getTime();\n  unixNow \u003d (unixNow / 1000)+(2*60*60);\n  \n  var ct \u003d 0;\n  while ( ct \u003c sourcesheet.getMaxRows()) {\n    var unixCheckInDate \u003d new Date(valuesCheckInDate[ct][0]).getTime();\n    var checkInhour \u003d valuesCheckInHour[ct][0].substring(0, 2);\n    unixCheckInDate \u003d (unixCheckInDate/1000) + (checkInhour*60*60) + (2*60*60) // checkInHour pour l\u0027heure du check in 18h00 et 2 pour UTC+2\n    \n    //Logger.log(\"\\nDATE IN \"+valuesCheckInDate[ct][0]+\" \\nIN \"+unixCheckInDate\" - NOW \"+unixNow+\"\\n-----------------------------\\n\");\n    \n    if(unixCheckInDate \u003e\u003d unixNow){\n      break;\n    }\n    ct++;\n  }\n  \n  // Dois-je remettre le chauffage en route ?\n  \n  var now \u003d new Date(); // date pour Google calendar\n  \n  // Si le programme en cours est ***prnorm et que la prochaine location est dans plus de 4h, lancer le programme ***prabs\n  if((currentProg \u003d\u003d\"***prnorm\") \u0026\u0026 ((unixCheckInDate - unixNow) \u003e\u003d (4*60*60))){\n    Logger.log (\"lancer programme ***prabs\");\n    message \u003d \"[chaudière] - TEST lancer programme ***prabs\";\n    sendMail(message);\n    //ENVOYER SMS ***prabs\n    body.clear();\n    body.setText(\"***prabs\");\n    \n    var eventStartHeater \u003d CalendarApp.getCalendarById(\"dbar0t16hhn7v58niplntcpkmg@group.calendar.google.com\").createEvent(\"***prabs\", now, now);\n    eventStartHeater.removeAllReminders();\n    eventStartHeater.addPopupReminder(0);\n  }\n  \n  // Si la prochaine location est dans moins de 4h et que le programme est sur ***prnorm, ne rien faire\n  else if((currentProg \u003d\u003d\"***prnorm\") \u0026\u0026 ((unixCheckInDate - unixNow) \u003c\u003d (4*60*60))){\n    Logger.log (\"en cours de chauffe avant location. Ne rien faire\");\n    message \u003d \"[chaudière] - TEST en cours de chauffe avant location. Ne rien faire\";\n    //sendMail(message);\n  }\n  \n  // Si la prochaine location est dans moins de 4 h, allumer le chauffage. Sinon rien\n  else if((unixCheckInDate - unixNow) \u003c\u003d (4*60*60)){\n\n      Logger.log(\"lancer programme ***prnorm\");\n      message \u003d \"[chaudière] TEST lancer programme ***prnorm\";\n      sendMail(message);\n      //ENVOYER SMS ***prnorm\n      body.clear();\n      body.setText(\"***prnorm\");\n      \n      var eventStartHeater \u003d CalendarApp.getCalendarById(\"dbar0t16hhn7v58niplntcpkmg@group.calendar.google.com\").createEvent(\"***prnorm\", now, now);\n      eventStartHeater.removeAllReminders();\n    eventStartHeater.addPopupReminder(0);\n \n    \n  }else{\n    Logger.log (\"Temps avant prochaine location supérieur à 4h. Attendre le prochain contrôle\");\n    message \u003d \"[chaudière] - TEST Temps avant prochaine location supérieur à 4h. Attendre le prochain contrôle\";\n    //sendMail(message);\n  }\n\n}\n\n//---------------------------------------\n\nfunction sendMail(message){\nGmailApp.sendEmail(\"greyter@gmail.com\", message, message)\n}"}]}